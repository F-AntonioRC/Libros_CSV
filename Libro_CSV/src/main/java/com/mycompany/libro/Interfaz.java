/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.libro;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;


/**
 *
 * @author developer
 */
public final class Interfaz extends javax.swing.JFrame {
    

    /**
     * Creates new form Interfaz
     * @throws java.io.IOException
     */
    
    //METODO CONSTRUCTOR DEL JFRAME
    public Interfaz() throws IOException {
        initComponents();//INICIALIZACION DE LOS COMPONENTES DEL JFRAME
        this.setLocationRelativeTo(null);//SE PONE UNA LOCACION PARA QUE APAREZCA EN EL CENTRO DE LA PANTALLA
        File archivo;
        FileWriter escribir; //USO DE LA LIBRERIA FILEWRITER PARA ESCRIBIR EN EL ARCHIVO
        PrintWriter linea; //SE USA LA LIBRERIA á¹”RINTWRITER PARA USAR UN SALTO DE LINEA
        archivo = new File("/home/developer/Documentos/libros.csv"); //DIRECCION EN LA QUE SE UBICA EL ARCHIVO
        if(!archivo.exists()){//CONDICION PARA EJECUTAR  SI EL ARCHIVO NO EXISTE
            
            try {//EN CASO DE QUE EL ARCHIVO NO EXISTA SE CREARA
               archivo.createNewFile();//
               escribir = new FileWriter (archivo, true); //SECUENCIA QUE NOS PERMITIRA ESCRIBIR EN EL ARCHIVO
               linea = new PrintWriter (escribir);//SALTO DE LINEA 
               linea.print("Titulo"+ "," + "Autor" + "," + "Editorial" + "," + "Volumen" + "," + "Genero" + "," + "Estado" + "\n");
               linea.close();//SE CIERRA LA ACCION
               escribir.close();//SE CIERRA LA ACCION
            }catch (IOException e){//SE GENERA LA EXCEPCION 
                JOptionPane.showMessageDialog(null, "Hay un error en el archivo");//SE MUESTRA UN MENSAJE EN CASO DE ALGUN ERROR
            }
        }else{//SENTENCIA ELSE PARA CUANDO EL ARCHIVO ESTE CREADO
            try{
                escribir = new FileWriter(archivo, true);//METODO PARA ESCRIBIR EN EL ARCHIVO
                linea = new PrintWriter(escribir);
                
                linea.close();//SE CIERRA LA ACCION
               escribir.close();//SE CIERRA LA ACCION
                
            }catch(IOException e){
                
            }
        
    }
    }

    public void Nombre_Columnas(){
            
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        popupMenu1 = new java.awt.PopupMenu();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Titulo = new java.awt.TextField();
        Autor = new java.awt.TextField();
        jLabel5 = new javax.swing.JLabel();
        Editorial = new java.awt.TextField();
        DataListGenero = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Volumen = new java.awt.TextField();
        jLabel8 = new javax.swing.JLabel();
        DataListEstado = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        popupMenu1.setLabel("popupMenu1");

        jLabel1.setFont(new java.awt.Font("AnjaliOldLipi", 1, 24)); // NOI18N
        jLabel1.setText("FORMULARIO LIBROS");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jLabel3.setText("Titulo del Libro:");

        jLabel4.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jLabel4.setText("Autor:");

        Titulo.setBackground(new java.awt.Color(255, 255, 255));
        Titulo.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Titulo.setName("Titulo"); // NOI18N
        Titulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Titulo(evt);
            }
        });

        Autor.setBackground(new java.awt.Color(255, 255, 255));
        Autor.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Autor.setName("Autor"); // NOI18N
        Autor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutorActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jLabel5.setText("Editorial: ");

        Editorial.setBackground(new java.awt.Color(255, 255, 255));
        Editorial.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Editorial.setName("Editorial"); // NOI18N
        Editorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditorialActionPerformed(evt);
            }
        });

        DataListGenero.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        DataListGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aventura", "Ciencia Ficcion", "Suspenso", "Terror", "Romance", "Desarrollo Humano", "Escolar" }));
        DataListGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataListGeneroActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jLabel6.setText("Genero:");

        jLabel7.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jLabel7.setText("Volumen:");

        Volumen.setBackground(new java.awt.Color(255, 255, 255));
        Volumen.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Volumen.setName("Volumen"); // NOI18N
        Volumen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                VolumenKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jLabel8.setText("Estado: ");

        DataListEstado.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        DataListEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bueno", "Regular", "Maltratado" }));
        DataListEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataListEstadoActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jButton1.setText("Guardar datos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titulo", "Autor", "Editorial", "Volumen", "Genero", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable);

        jLabel9.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jLabel9.setText("Ultimos datos Almacenados: ");

        jLabel10.setIcon(new javax.swing.ImageIcon("/home/developer/Descargas/logo-itvo.png")); // NOI18N
        jLabel10.setText("jLabel10");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(jLabel2))
                            .addComponent(jLabel9)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 843, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Autor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Titulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 843, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DataListGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(DataListEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(121, 121, 121))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Editorial, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(Volumen, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Autor, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Editorial, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DataListGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DataListEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Volumen, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        Titulo.getAccessibleContext().setAccessibleName("Titulo");
        Titulo.getAccessibleContext().setAccessibleDescription("Titulo");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Titulo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Titulo
        // TODO add your handling code here:
    }//GEN-LAST:event_Titulo

    private void DataListGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataListGeneroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DataListGeneroActionPerformed

    private void EditorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditorialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EditorialActionPerformed

    
        private void limpiarTextField(){//METODO PARA LIMPRIAR EL REGISTRO DE LOS DATOS
        Titulo.setText("");
        Autor.setText("");
        Editorial.setText("");
        Volumen.setText("");
        DataListGenero.setSelectedIndex(0);
        DataListEstado.setSelectedIndex(0);   
    }
        
        private void limpiarTable(){
           DefaultTableModel modelo = (DefaultTableModel) jTable.getModel();
                    while(modelo.getRowCount()>0)modelo.removeRow(0);
 
                    TableColumnModel modCol = jTable.getColumnModel();
                    while(modCol.getColumnCount()>0)modCol.removeColumn(modCol.getColumn(0)); 
        }
        
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        File archivo;
        FileWriter escribir; //USO DE LA LIBRERIA FILEWRITER PARA ESCRIBIR EN EL ARCHIVO
        PrintWriter linea;//SE ESCRIBE EN LINEA EN EL ARCHIVO TXT
        archivo = new File("/home/developer/Documentos/libros.csv"); //DIRECCION DE CREACION DEL ARCHIVO
                    try{ //SENTENCIA TRY PARA ALGUN ERROR
                escribir = new FileWriter(archivo, true);//SE CREA EL ARCHIVO SI NO ESTA CREADO
                linea = new PrintWriter(escribir);//SE ESCRIBE EN EL ARCHIVO YA CREADO
                //LINEAS CON LAS CUALES SE GUARDAN LOS DATOS EN EL TXT                 
                    //int i = 0;
                    //while(i < 2){
                   //i++;
                    //}
                linea.print(Titulo.getText()+" , ");
                linea.print(Autor.getText()+ " , ");
                linea.print(Editorial.getText()+ " , ");
                linea.print(Volumen.getText()+ " , ");
                linea.print(DataListGenero.getSelectedItem().toString()+ " , ");
                linea.print(DataListEstado.getSelectedItem().toString()+ "\n" );
                
                linea.close();//SE CIERRA LA ACCION
               escribir.close();//SE CIERRA LA ACCION  
               
               
            }catch(IOException e){
                System.out.println(e);//SE MUESTRA EN MENSAJE EL ERROR EN CASO DE QUE OCURRA
            }
                    limpiarTextField();
                    JOptionPane.showMessageDialog(null, "Los Datos se han guardado correctamente");//MENSAJE AL GUARDAR LOS DATOS
                    //SE LLAMA AL MAETODO PARA LIMPAR LOS TEXT FIELD Y EL JCOMBOBOX

                    int question = JOptionPane.showConfirmDialog(null, "Â¿Desea ver los registros guardados?");//MENSAJE PARA MOSTRAR LOS DATOS
                    if(question == 0){
                        try { //CONDICION PARA EJECUTAR ALGUNA ACCION                      
                            TableBooks();//METODO PARA INGRESAR DATOS EN LA JTABLE
                        //MENSAJE DE ALGUNA EXCEPCION SI SE DIERA EL CASO
                        //CONDICION PARA EJECUTAR ALGUNA ACCION
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
                    }else {
                        JOptionPane.showMessageDialog(null, "Puede volver a ingresar un Registro");
                    limpiarTable();
                    //METODO PARA LIMPIAR EL JTABLE 
                    
                    }
                    /*else{
        try {
            Tabletwo();//METODO AUN NO TERMINADO
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }        } */
                    
                   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TableBooks() throws FileNotFoundException{//METODO PARA INSERTAR LOS DATOS EN LA JTABLE
           String filepath = "/home/developer/Documentos/libros.csv";//UBICACION DEL ARCHIVO PARA ARRASTRAR LOS DATOS
           File file = new File (filepath);//USO DE LA LIBRERIA FILE PARA UTILIZAR EL ARCHIVO
             
           try{
           BufferedReader br = new BufferedReader(new FileReader (file));//LINEA PARA LEER EL ARCHIVO CON LA LIBRERIA FILE
    
           DefaultTableModel model = (DefaultTableModel)jTable.getModel();//LINEA PARA OBTENER Y MODIFICAR CONTENIDOS DENTRO DE LA TABLA
               Object[] tableLines = br.lines().toArray();//LINEA QUE NOS PERMITE CONVERTIR A UN ARRAY UN OBJETO

               for (int i = 0 ; i < tableLines.length; i++ ) {//CICLO PARA RECORRER LOS DATOS INGRESADOS
                   String line = tableLines[i].toString().trim();//SENTENCIA PARA CONVERTIR LOS DATOS A STRING
                   String[] dataRow = line.split(",");//LINEA QUE NOS PERMITE IDENTIFICAR LA SEPARACION ENTRE CADA CELDA 
                   model.addRow(dataRow);//LINEA QUE NOS PERMITE AGREGAR MAS FILAS AL JTABLE
               }
                        
                   }catch(IOException e){
                       JOptionPane.showMessageDialog(null, e.toString());//MENSAJE EN CASO DE ALGUN ERROR
                   }

    }
    
    //METODO PARA LA SEUNDA VERSION DE LA TABLA (AUN NO TERMINADO)
    private void Tabletwo() throws FileNotFoundException{
                   String filepath = "/home/developer/Documentos/libros.csv";
                   File file = new File (filepath);
                   
           BufferedReader br = new BufferedReader(new FileReader (file));
    
           DefaultTableModel model = (DefaultTableModel)jTable.getModel();
           String tableLines = br.lines().toString();
           String line = tableLines.trim();
           String[] dataRow = line.split(",");
           model.addRow(dataRow);
                   
    }
    
    private void AutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AutorActionPerformed

    private void VolumenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VolumenKeyTyped
        char validar = evt.getKeyChar();//SE CREA UNA VARIABLE DE TIPO CARACTER PARA EL TIPO DE DATO
        if(Character.isLetter(validar)){//EL CARACTER SE VALIDA
            getToolkit().beep();//SE LLAMA UNA CLASE DE EVENTOS DE TIPO DE ACCION JUNTO CON UN BEEP
            evt.consume();//LA LIBRERIA CONSUME NOS PERMITIRA INTRODUCIR CARACTERES NUMERICOS CON PUNTOS O COMAS
            JOptionPane.showMessageDialog(rootPane, "Ingrese un Valor Numerico por favor");//SE USA ROOTPANE PARA ACOMODAR 
            //DIFERENTES TIPOS DE OBJETOS   
        }
    }//GEN-LAST:event_VolumenKeyTyped

    private void DataListEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataListEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DataListEstadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new Interfaz().setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.TextField Autor;
    private javax.swing.JComboBox<String> DataListEstado;
    private javax.swing.JComboBox<String> DataListGenero;
    private java.awt.TextField Editorial;
    private java.awt.TextField Titulo;
    private java.awt.TextField Volumen;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private java.awt.PopupMenu popupMenu1;
    // End of variables declaration//GEN-END:variables
}
